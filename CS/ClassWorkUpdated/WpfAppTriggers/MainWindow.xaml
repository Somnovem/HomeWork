<Window x:Class="WpfAppTriggers.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:WpfAppTriggers"
        mc:Ignorable="d"
        Title="MainWindow" Height="450" Width="800">
    <Window.Resources>
        <Style TargetType="Button" x:Key="buttonStyle">
            <Setter Property="Margin" Value="15,1,15,1"/>
            <Setter Property="Padding" Value="3"/>
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="DarkKhaki"/>
                    <Setter Property="Foreground" Value="Coral"/>
                    <Setter Property="FontSize" Value="14"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Foreground" Value="Aquamarine"/>
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="Button" BasedOn="{StaticResource buttonStyle}" x:Key="btnStyleNew">
            <EventSetter Event="Click" Handler="Button_Click"/>
            <Style.Triggers>
                <EventTrigger RoutedEvent="Click">
                    <EventTrigger.Actions>
                        <BeginStoryboard>
                            <Storyboard >
                                <DoubleAnimation Storyboard.TargetProperty="Height" To="50" From="40" Duration="0:0:1" AutoReverse="True"/>
                            </Storyboard> 
                        </BeginStoryboard>
                    </EventTrigger.Actions>
                </EventTrigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsMouseOver" Value="True"/>
                        <Condition Property="IsPressed" Value="True"/>
                    </MultiTrigger.Conditions>
                    <MultiTrigger.Setters>
                        <Setter Property="Foreground" Value="Olive"/>
                        <Setter Property="FontStyle" Value="Italic"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <TextBox Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" x:Name="edText" 
                 AcceptsReturn="True"
                 VerticalScrollBarVisibility="Auto" HorizontalScrollBarVisibility="Auto">
            <TextBox.Resources>
                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="5"/>
                    <Setter Property="Background" Value="Silver"/>
                    <Setter Property="Foreground" Value="White"/>
                    <Setter Property="Padding" Value="5"/>
                    <Style.Triggers>
                        <Trigger Property="IsFocused" Value="True">
                            <!--<Setter Property="FontStyle" Value="Italic"/>-->
                            <Setter Property="Background" Value="White"/>
                            <Setter Property="Foreground" Value="Navy"/>
                        </Trigger>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="Foreground" Value="Green"/>
                            <Setter Property="Background" Value="LightBlue"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding ElementName=cbReadOnly,Path=isChecked}" Value="True">
                            <Setter Property="IsReadOnly" Value="True"/>
                            <Setter Property="BorderBrush" Value="Red"/>
                            <Setter Property="BorderThickness" Value="5"/>
                            <Setter Property="FontWeight" Value="Bold"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </TextBox.Resources>
        </TextBox>
        
        <CheckBox x:Name="cbReadOnly" Grid.Row="1" Grid.Column="0"
                  IsChecked="False" Content="ReadOnly" Margin="5" Foreground="Gray"/>

        <Button x:Name="btnOk" Grid.Row="2" Grid.Column="0" 
                Content="OK" Height="40" Style="{StaticResource btnStyleNew}">
            <Button.Resources>
                <Style TargetType="Button" BasedOn="{StaticResource buttonStyle}">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding ElementName=cbReadOnly , Path=isChecked}" Value="False">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </Button.Resources>
        </Button>
        <Button x:Name="btnCancel" Grid.Row="2" Grid.Column="1" 
                Content="Cancel" Style="{StaticResource btnStyleNew}"/>
    </Grid>
</Window>
